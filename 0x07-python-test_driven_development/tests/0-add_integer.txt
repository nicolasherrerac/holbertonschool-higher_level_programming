==========================
How use 0-add_int function
==========================

Usage
-----
Import the function:

	>>> add_integer = __import__('0-add_integer').add_integer

Check docstring for function:
        >>> len(add_integer.__doc__) > 1
        True

Test for Success Cases:

Tests for Positive Numbers.

    >>> add_integer(10, 7)
    17

Tests for Negative Numbers.

    >>> add_integer(-8, -2)
    -10

Test for Floats Numbers.
	>>> add_integer(3.5, 1.5)
	5

	>>> add_integer(3, 1.5)
	4

	>>> add_integer(-5.5, 1.5)
	-4

Check Return.
	>>> type(add_integer(6, 10)) == int
	True

Tests for String And Numbers.
	>>> add_integer('M', 1.5)
	Traceback (most recent call last):
                ...
	TypeError: a must be an integer

	>>> add_integer(1.5, 'M')
	Traceback (most recent call last):
                ...
	TypeError: b must be an integer

Tests for inf.
 	>>> add_integer(float('inf'), 2)
        Traceback (most recent call last):
                ...
        OverflowError: cannot convert float infinity to integer

Tests without Arguments.
	>>> add_integer()
	Traceback (most recent call last):
                ...
        TypeError: add_integer() missing 1 required positional argument: 'a'

Tests With More Arguments.
	>>> add_integer(1, 2, 3)
	Traceback (most recent call last):
                ...
	TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Tests With Only One Argument.
	>>> add_integer(60)
	158
