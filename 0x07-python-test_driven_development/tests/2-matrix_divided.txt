==========================
How use 2-matrix_divided function
==========================

Usage
-----
Import the function:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Check docstring for function:
    >>> matris = [[6, 10, 20]]
	>>> matrix_divided(matris, 2)
	[[3.0, 5.0, 10.0]]

	>>> matrix_divided(3, 3)
	Traceback (most recent call last):
	TypeError: object of type 'int' has no len()

	>>> matrix_divided([[5, 7, 2]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix_divided([["H", "World", "Nico"]], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[5, 7, 2]], float('inf'))
	[[0.0, 0.0, 0.0]]

	>>> matrix_divided()
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

	>>> matrix_divided([[5, 7, 2]] -5)
	Traceback (most recent call last):
	TypeError: unsupported operand type(s) for -: 'list' and 'int'
	
	>>> matrix_divided([[5, 7, 2]], -5)
	[[-1.0, -1.4, -0.4]]

	>>> matrix_divided([[5, 7, 2]], [[2, 7, 2]])
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix_divided([[5, 7, 2, [[2, 7, 5]]]])
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> matrix_divided([[-5, -7, -2]], 6)
	[[-0.83, -1.17, -0.33]]