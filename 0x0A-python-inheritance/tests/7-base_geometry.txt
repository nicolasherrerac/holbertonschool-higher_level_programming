==========================
How use 7-base_geometry function
==========================

Usage
-----
Import the function:

	>>> Rec = __import__('7-base_geometry').BaseGeometry

	>>> b = Rec()
	>>> b.area()
	Traceback (most recent call last):
	Exception: area() is not implemented

	>>> b.area(3)
	Traceback (most recent call last):
	TypeError: area() takes 1 positional argument but 2 were given

	>>> b.integer_validator("integer")
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> bg.integer_validator("A", None)
	Traceback (most recent call last):
	NameError: name 'bg' is not defined

	>>> b.integer_validator("A", None)
	Traceback (most recent call last):
	TypeError: A must be an integer

	>>> b.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> b.integer_validator("integer")
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> b.integer_validator("integer", 1, 2)
	Traceback (most recent call last):
	TypeError: integer_validator() takes 3 positional arguments but 4 were given

	>>> b.integer_validator("list", [1, 2, 3])
	Traceback (most recent call last):
	TypeError: list must be an integer

	>>> b.integer_validator("bool", True)
	Traceback (most recent call last):
	TypeError: bool must be an integer

	>>> b.integer_validator("tuple", (2, 5, 5))
	Traceback (most recent call last):
	TypeError: tuple must be an integer

	>>> b.integer_validator("Hi", False)
	Traceback (most recent call last):
	TypeError: Hi must be an integer

	>>> b.integer_validator("my_int", "967")
	Traceback (most recent call last):
	TypeError: my_int must be an integer